pico-8 cartridge // http://www.pico-8.com
version 41
__lua__

fps = 30
lifestage = {"germ", "grow", "flower"}
t = 0
debug = ""
sel_k = 8 -- selection sprite
poff = 3 -- player center offset
crafting = false
menu = {
    sel = 1,
    items = {
        {title = "fire potion", k = 23, sel = true, col = 9},
        {title = "love potion", k = 24, sel = false, col = 8}
    }
}
particles = {}

function _init()
    player = {
        k = 17, -- sprite
        x = 0,
        y = 0,
        sel = {0, 1}, -- player next cell
        ac=0.4, -- acceleration
        mu = 0.55, -- friction
        dx = 0,
        dy = 0,
    }

    local cell_x, cell_y = pixel_to_cell(player.x + poff, player.y + poff)

    player.cell_x = cell_x
    player.cell_y = cell_y

    grid = {}
    for i=1,16 do -- assuming a 16x16 grid
        grid[i] = {}
        for j=1,16 do
            grid[i][j] = 0 -- initialize each cell as empty (0)
        end
    end

    -- set up cauldron
    cauldron_coords = get_4x4(4, 5)
    local c = {{k = 21}, {k = 22}, {k = 37}, {k = 38}}
    -- assign each cauldron part to a grid cell and mark it as solid
    for i, coord in ipairs(cauldron_coords) do
        local cell_x, cell_y = coord[1], coord[2]
        c[i].solid = true
        grid[cell_x][cell_y] = c[i]
    end
end

function get_4x4(cx, cy)
    return {
        {cx, cy},
        {cx + 1, cy},
        {cx, cy + 1},
        {cx + 1, cy + 1}
    }
end

function pixel_to_cell(x, y)
    local cell_size = 8 -- assuming each cell is 8x8 pixels
    local cell_x = flr(x / cell_size) + 1
    local cell_y = flr(y / cell_size) + 1
    return cell_x, cell_y
end

function cell_to_pixel(cell_x, cell_y)
    local cell_size = 8 -- assuming each cell is 8x8 pixels
    local x = (cell_x - 1) * cell_size
    local y = (cell_y - 1) * cell_size
    return x, y
end

-- Checks if a cell is part of the cauldron
function is_cauldron_cell(cell_x, cell_y)
    for c in all(cauldron_coords) do
        if cell_x == c[1] and cell_y == c[2] then
            return true
        -- else
        --     debug = "current: (" .. cell_x .. ", " .. cell_y .. "). Cauldron: " .. c[1] .. ", " .. c[2]
        end
    end
    return false
end

function gauss_rng()
    local sum = 0
    for i=1,12 do
        sum = sum + rnd(1) -- 'rnd(1)' generates a uniform random number between 0 and 1
    end
    return sum - 6
end

-- steam particles
function create_particle(x, y)
    local particle = {
        x = x + gauss_rng(),
        y = y + gauss_rng(),
        vx = .25 + .1*gauss_rng(), -- random horizontal velocity for some drift
        vy = -.3 + .1*gauss_rng(), -- negative vertical velocity to go up
        life = flr(rnd(60) + 30), -- random life between 30 and 90 frames
    }
    if rnd(1) > .5 then
        particle.color = 7
    else
        particle.color = 6
    end

    add(particles, particle)
end

function add_flower()
    local off = 8 -- offset
    local cell_x, cell_y = player.sel[1], player.sel[2]

    local cell = grid[cell_x][cell_y]

    if cell == 0 then
        -- debug = "Adding flower " .. cell_x .. ", " .. cell_y
        local fl = {
            type = "flower",
            k = 4, -- germination sprite
            cell_x = cell_x,
            cell_y = cell_y,
            stage = lifestage[1], -- life stage
            t = t -- created at
        }

        grid[cell_x][cell_y] = fl

        return true
    end

    return false
end

function update_flower(f)
    local d = t - f.t
    if (d >= 1*fps) and (f.stage == lifestage[1]) then
        f.k += 1
        f.stage = lifestage[2]
    elseif (d >= 2*fps) and (f.stage == lifestage[2]) then
        f.k += 1
        f.stage = lifestage[3]
    end
end

function update_player()
	if (btn(⬅️)) then
        player.dx -= player.ac
        player.k = 20
    end

    if (btn(➡️)) then
        player.dx += player.ac
        player.k = 19
    end

	if (btn(⬆️)) then
        player.dy -= player.ac
        player.k = 18
    end

    if (btn(⬇️)) then
        player.dy += player.ac
        player.k = 17
    end
	
	-- move (add velocity)
	local new_x = player.x + player.dx
    local new_y = player.y + player.dy

    local cell_x, cell_y = pixel_to_cell(new_x + poff, new_y + poff)
    local cell = grid[cell_x][cell_y]

    -- update if not solid
    if type(cell) ~= "table" or not cell.solid then
        player.x = new_x
        player.y = new_y
        player.cell_x = cell_x
        player.cell_y = cell_y
    end

    -- Only allow entering crafting state if the player has not just crafted
    if is_cauldron_cell(cell_x, cell_y) then
        crafting = true
    end

    if player.k == 17 then
        player.sel = {cell_x, cell_y + 1}
    elseif player.k == 18 then
        player.sel = {cell_x, cell_y - 1}
    elseif player.k == 19 then
        player.sel = {cell_x + 1, cell_y}
    else
        player.sel = {cell_x - 1, cell_y}
    end

	-- friction (lower for more)
	player.dx *= player.mu
	player.dy *= player.mu

	-- spd = sqrt(dx*dx+dy*dy)
	-- f = (f + spd*2) % 4 -- 4 frames
	-- if (spd < 0.05) then 
    --     f = 0
    -- end

    -- create new particles
    for _, coord in ipairs({cauldron_coords[1], cauldron_coords[2]}) do
        local px, py = cell_to_pixel(coord[1], coord[2])
        create_particle(px + 4, py + 2) -- + 4 to start in the middle of a cell
    end

    -- Update particles
    for particle in all(particles) do
        particle.x += particle.vx
        particle.y += particle.vy
        particle.life -= 1
        if particle.life <= 0 then
            del(particles, particle)
        end
    end
end

function _update()
    t += 1

    update_player()

    for i=1, #grid do
        for j=1, #grid[i] do
            local f = grid[i][j]
            if f ~= 0 and f.type == "flower" then
                update_flower(f)
            end
        end
    end

    if crafting then
        -- up
        if btnp(2) then
            if menu.sel > 1 then
                menu.items[menu.sel].sel = false
                menu.sel -= 1
                menu.items[menu.sel].sel = true
            end
        -- down
        elseif btnp(3) then
            if menu.sel < #menu.items then
                menu.items[menu.sel].sel = false
                menu.sel += 1
                menu.items[menu.sel].sel = true
            end
        end
    end

    if (btnp(4)) then
        if crafting then
            crafting = false
        -- Add a new sprite at the player's position
        else
            if add_flower() then
                sfx(0)
            end
        end
    end
end


function _draw()
    cls(0)

	-- room_x = flr(x/16)
	-- room_y = flr(y/16)
	-- camera(room_x*128,room_y*128)
    camera(0, 0)

    map()

    for i=1, #grid do
        for j=1, #grid[i] do
            local act = grid[i][j]
            if act ~= 0 then
                x, y = cell_to_pixel(i, j)
                spr(act.k, x, y)
            end
        end
    end

    for particle in all(particles) do
        circfill(flr(particle.x), flr(particle.y), 0, particle.color)
    end

    -- draw target
    local k = fget(0)
    local x, y = cell_to_pixel(player.sel[1], player.sel[2])
    spr(sel_k, x, y) 

    if crafting then
        rectfill(10, 10, 90, 90, 1) -- Draw a background for the menu
        

        print("cauldron\n------------", 20, 15, 7)
        for i=1,#menu.items do
            local m = menu.items[i]
            local t = m.title
            if m.sel then
                print("> ", 14, 20 + i*10, 7)
            end
            print(t, 20, 20 + i*10, m.col) -- Draw each menu item
            spr(m.k, 70, 20 + i*10 - 2)
        end
        print("cancel: c, craft: x", 13, 80, 7)
    end

    print(debug, 2, 2)
    print("plant: c", 2, 16*8 - 6, 7)
    print("switch: x", 5*8, 16*8 - 6, 7)

	-- draw the player
	spr(player.k,      -- frame index
	 player.x, player.y, -- x,y (pixels)
	 1,1    -- w,h, flip
	)
end

__gfx__
00000000333333333333333333333333333333333333333333333333333333339999999933311333311111130000000000000000000000000000000000000000
000000003333333333333333333333333333333333333333333333333333333390000009331bb133159999510000000000000000000000000000000000000000
00700700333333333a3333ba3333333333333333333333333333933333338333902002093313b133359999530000000000000000000000000000000000000000
00077000333333333bb333b333333333333333333333bb33333979333338783390022009313bb3131d5555510000000000000000000000000000000000000000
000770003333333333b33bb33a3a3a33333333333333b33333339333333383339002200931bb3b131d6655510000000000000000000000000000000000000000
007007003333333331b31bb331bbb3333333b3333333b3333333b3333333b333902002091b3bbbb11d6655510000000000000000000000000000000000000000
000000003333333333333333333333333331b3333331b3333331b3333331b333900000091bb3b3b131d665130000000000000000000000000000000000000000
00000000333333333333333333333333333333333333333333333333333333339999999931444413151111510000000000000000000000000000000000000000
00000000070000700700007000007000000700000000111111110000000550000005500000000000000000000000000000000000000000000000000000000000
00000000077777700777777000077770007777000001555555551000000660000006600000000000000000000000000000000000000000000000000000000000
0000000007ffff7007777770000777f000f777000015999999995100000990000008800000000000000000000000000000000000000000000000000000000000
0000000007ffff700777777000077770007777000159999999999510009999000088880000000000000000000000000000000000000000000000000000000000
00000000077777700777777000b77770007777b000159999999951000a9999900e88888000000000000000000000000000000000000000000000000000000000
00000000fccccccffcbbbbcf00bccfc000cfccb001115555555511100a9999900e88888000000000000000000000000000000000000000000000000000000000
00000000fccccccffcbbbbcf000cccc000cccc0001111111111111100a9999900e88888000000000000000000000000000000000000000000000000000000000
0000000000c00c0000c00c0000000c00000c0000011111111111111000a9990000e8880000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000111111111111110000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000111111111111110000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000111111111111110000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000011111111111100000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000001111111111000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000005111111115000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000055000000005500000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0102010101010301010201090101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010301010102010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101020101010101020101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101020101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101030101010201010103010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0201010101010101010101090101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101020100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0109010301010901010301010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010901010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010901010301010101090101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101010101010102010101010101030100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0101030101010101010101010101010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000300000d0001100015050190501f050260502600020000180000900004000010000000000000000000000000000000000000000000000000000000000015000150001500015000150001500015000150001500
001000000735007350073500030000000073000735007300073500735007350000000000000000073500735007300000000735007350000000030007350073000735007300073000730007350073500735007350
001000000235002350023500000000000000000235000000023500235002350000000000000000023500235000000000000235002350000000000002350000000235000000000000000002350023500235002350
00100000006000000000000000002e6532e600000000000000000000001f300000002e653000000000000000000000000000000000002e653000000000000000000002e6002e6002e60000000000000000000000
__music__
00 01424344
00 41024344
00 01420344

